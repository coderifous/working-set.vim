*working-set.txt*  Integration for Working Set coding companion.

===============================================================================
CONTENTS                                                 *working-set-contents*

    1. Intro...............................|working-set-intro|
    1. Dependency..........................|working-set-dependency|
    2. Commands............................|working-set-commands|
    3. Mappings............................|working-set-mappings|
    4. Contributing........................|working-set-contributing|
    5. Credits.............................|working-set-credits|
    6. Changelog...........................|working-set-changelog|

===============================================================================
INTRO                                                       *working-set-intro*

Working Set is an programming editor companion that makes searching, and using
search results for navigation, super nice.

This is the vim plugin that integrates vim with Working Set.  If you're using
vim 8, then the async features will be used, and the integration is smoother.

If you're using vim 7, there is a fall back plugin that gives you most of the
features.

===============================================================================
DEPENDENCY                                             *working-set-dependency*

The Vim 7 version of the plugin uses ruby bindings.

The Vim 8 version of the plugin uses the new async job/channel support.
Working Set uses UNIX Domain sockets for IPC, which Vim 8 doesn't seem to have
direct support for (Channels work with TCP sockets, Jobs work with
stdio/stdin/stderr).  As a work around, this plugin relies on the "socat"
command to relay messages between vim and the Working Set socket.  So you'll
need to install that.

On Mac:

  `brew install socat`

TODO: provide instructions for other OSes.

===============================================================================
COMMANDS                                                 *working-set-commands*

All interaction with Working Set can be driven by commands in ex mode.

    :WS {term}        - does a search in Working Set.

    :WSSync           - jumps to currently selected location.

    :WSSelectNextItem - selects next match in Working Set, then syncs.

    :WSSelectPrevItem - selects previous match in Working Set, then syncs.

    :WSSearchCurrentWord - does a word-boundary search on the word under the
                          cursor.

Examples:

  Search for foo:

    :WS foo

  With cursor in the middle of word "business_thing", search for all ocurrences
  of "business_thing":

    :WSSearchCurrentWord

===============================================================================
MAPPINGS                                                 *working-set-mappings*

Some default normal mode mappings give convenient access to Working Set
commands.

  <C-n>     :WSSelectNextItem

  <C-p>     :WSSelectPrevItem

  <Leader>* This does a word match on the word under the cursor in vim (like *)
            followed by :WSSearchCurrentWord.

Note: If you don't want the default mappings, you can disable them by setting
"g:WorkingSetSkipMappings" to any value before loading the plugin.

===============================================================================
USAGE GUIDE                                           *working-set-usage-guide*

Working Set (the standalone program) is intended to run separately, alongside
your editor.  Your editor will communicate with Working Set via a file socket,
sending and receiving commands.  Those commands will run searches, display
results, facilitate navigation and other operations.

Working Set works best running in a terminal window that is tall, and placed
juxtaposed to the side of your editor.  If you use Tmux, this is a perfect time
to use split panes.

For example, on a laptop, I would suggest running your terminal full screen with
Vim taking most of the space on the left, and Working Set running in a pane that
takes up a smaller space on the right.

                              Laptop Screen
               +----------------------------+----------+
               |                            |          |
               |                            |          |
               |                            |          |
               |                            |          |
               |                            |          |
               |            Vim             | Working  |
               |                            |   Set    |
               |                            |          |
               |                            |          |
               |                            |          |
               |                            |          |
               +----------------------------+----------+

On a larger desktop or multi-monitor setup, you could be more creative, running
Working Set in a separate window, even on a separate monitor.

With that in mind, here's the steps:

1) Install Working Set (gem install working_set)

2) Install working-set.vim plugin
   - don't forget to install socat

3) Change to your project's directory and run `working_set`

  $ working_set [whatever options you want]

  By default, Working Set will create a hidden socket file in that directory
  that the vim plugin will use for communication.

4) In another terminal, change to your project's directory and open vim.

  $ vim

5) Use "<leader>*" in normal mode, or the :WS commands to drive searches.

Working Set has an ncurses based interface with various keybindings that will
feel natural to vim users.  Checkout Working Set's help to learn more about what
you can do with it.

===============================================================================
CONTRIBUTING                                         *working-set-contributing*

The goal of this plugin is to leverage Working Set in the most seamless and
useful fashion.  If you discover a good use case for Working Set that isn't
covered by this plugin, then you can submit an issue via github.  If you'd like
to build the feature yourself, please fork the plugin, make your changes in a
branch, and then submit a pull request for that branch.

===============================================================================
CREDITS                                                   *working-set-credits*

Developed by Jim Garvin <http://github.com/coderifous>.

Git repository: https://github.com/coderifous/working-set.vim

===============================================================================
CHANGELOG                                               *working-set-changelog*

2020/09/02: Actual first public release.
2016/12/25: First public release.

